name: Release libgstspotify.so

on:
  release:
    types: [created]

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      dockerfile_hash: ${{ steps.calculate_hash.outputs.hash }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Calculate Dockerfile hash
        id: calculate_hash
        run: |
          echo "hash=$(sha256sum Dockerfile | awk '{print $1}')" >> $GITHUB_ENV

  build_amd64:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix:
        alpine_version: ['3.18', '3.19', '3.20']
    env:
      GST_PLUGINS_RS_TAG: 0.14.1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache build artifacts
        id: cache-build
        uses: actions/cache@v4
        with:
          path: ./output/linux/amd64/alpine${{ matrix.alpine_version }}
          key: ${{ runner.os }}-amd64-alpine${{ matrix.alpine_version }}-libgstspotify-${{ needs.prepare.outputs.dockerfile_hash }}-${{ env.GST_PLUGINS_RS_TAG }}
          restore-keys: |
            ${{ runner.os }}-amd64-alpine${{ matrix.alpine_version }}-libgstspotify-${{ needs.prepare.outputs.dockerfile_hash }}-

      - name: Set up Docker Buildx
        if: steps.cache-build.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v3

      - name: Build libgstspotify.so
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          docker buildx build --platform linux/amd64 --tag libgstspotify-builder-alpine${{ matrix.alpine_version }} --load --target final --build-arg GST_PLUGINS_RS_TAG=${{ env.GST_PLUGINS_RS_TAG }} --build-arg ALPINE_VERSION=${{ matrix.alpine_version }} --progress=plain .

      - name: save libgstspotify.so and checksums
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./output/linux/amd64/alpine${{ matrix.alpine_version }}/ 
          docker create --name libgstspotify-container-alpine${{ matrix.alpine_version }} libgstspotify-builder-alpine${{ matrix.alpine_version }} 
          docker cp libgstspotify-container-alpine${{ matrix.alpine_version }}:/usr/lib/gstreamer-1.0/libgstspotify.so ./output/linux/amd64/alpine${{ matrix.alpine_version }}/libgstspotify.so 
          sha256sum ./output/linux/amd64/alpine${{ matrix.alpine_version }}/libgstspotify.so > ./output/linux/amd64/alpine${{ matrix.alpine_version }}/libgstspotify.so.sha256
          tar czf ./output/linux/amd64/alpine${{ matrix.alpine_version }}/libgstspotify-amd64-alpine${{ matrix.alpine_version }}.tar.gz -C ./output/linux/amd64/alpine${{ matrix.alpine_version }} libgstspotify.so
          sha256sum ./output/linux/amd64/alpine${{ matrix.alpine_version }}/libgstspotify-amd64-alpine${{ matrix.alpine_version }}.tar.gz > ./output/linux/amd64/alpine${{ matrix.alpine_version }}/libgstspotify-amd64-alpine${{ matrix.alpine_version }}.tar.gz.sha256

      - name: Upload amd64 artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libgstspotify-amd64-alpine${{ matrix.alpine_version }}
          path: ./output/linux/amd64/alpine${{ matrix.alpine_version }}

  build_arm64:
    needs: prepare
    runs-on: buildjet-2vcpu-ubuntu-2204-arm
    strategy:
      matrix:
        alpine_version: ['3.18', '3.19', '3.20']
    env:
      GST_PLUGINS_RS_TAG: 0.14.1
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Cache build artifacts
        uses: actions/cache@v4
        with:
          path: ./output/linux/arm64/alpine${{ matrix.alpine_version }}
          key: ${{ runner.os }}-arm64-alpine${{ matrix.alpine_version }}-libgstspotify-${{ needs.prepare.outputs.dockerfile_hash }}-${{ env.GST_PLUGINS_RS_TAG }}
          restore-keys: |
            ${{ runner.os }}-arm64-alpine${{ matrix.alpine_version }}-libgstspotify-${{ needs.prepare.outputs.dockerfile_hash }}-

      - name: Set up Docker Buildx
        if: steps.cache-build.outputs.cache-hit != 'true'
        uses: docker/setup-buildx-action@v3

      - name: Build libgstspotify.so
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          docker buildx build --platform linux/arm64 --tag libgstspotify-builder-alpine${{ matrix.alpine_version }} --load --target final --build-arg GST_PLUGINS_RS_TAG=${{ env.GST_PLUGINS_RS_TAG }} --build-arg ALPINE_VERSION=${{ matrix.alpine_version }} --progress=plain .

      - name: save libgstspotify.so and checksums
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          mkdir -p ./output/linux/arm64/alpine${{ matrix.alpine_version }}/ 
          docker create --name libgstspotify-container-alpine${{ matrix.alpine_version }} libgstspotify-builder-alpine${{ matrix.alpine_version }} 
          docker cp libgstspotify-container-alpine${{ matrix.alpine_version }}:/usr/lib/gstreamer-1.0/libgstspotify.so ./output/linux/arm64/alpine${{ matrix.alpine_version }}/libgstspotify.so 
          sha256sum ./output/linux/arm64/alpine${{ matrix.alpine_version }}/libgstspotify.so > ./output/linux/arm64/alpine${{ matrix.alpine_version }}/libgstspotify.so.sha256
          tar czf ./output/linux/arm64/alpine${{ matrix.alpine_version }}/libgstspotify-arm64-alpine${{ matrix.alpine_version }}.tar.gz -C ./output/linux/arm64/alpine${{ matrix.alpine_version }} libgstspotify.so
          sha256sum ./output/linux/arm64/alpine${{ matrix.alpine_version }}/libgstspotify-arm64-alpine${{ matrix.alpine_version }}.tar.gz > ./output/linux/arm64/alpine${{ matrix.alpine_version }}/libgstspotify-arm64-alpine${{ matrix.alpine_version }}.tar.gz.sha256

      - name: Upload arm64 artifacts
        uses: actions/upload-artifact@v4
        with:
          name: libgstspotify-arm64-alpine${{ matrix.alpine_version }}
          path: ./output/linux/arm64/alpine${{ matrix.alpine_version }}

  create_release:
    needs: [build_amd64, build_arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download all amd64 artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: libgstspotify-amd64-alpine*
          path: ./output/linux/amd64/
          merge-multiple: true

      - name: Download all arm64 artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: libgstspotify-arm64-alpine*
          path: ./output/linux/arm64/
          merge-multiple: true

      - name: Upload Release Artifacts
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}
        with:
          files: |
            ./output/linux/amd64/alpine*/libgstspotify-amd64-alpine*.tar.gz
            ./output/linux/amd64/alpine*/libgstspotify-amd64-alpine*.tar.gz.sha256
            ./output/linux/arm64/alpine*/libgstspotify-arm64-alpine*.tar.gz
            ./output/linux/arm64/alpine*/libgstspotify-arm64-alpine*.tar.gz.sha256
